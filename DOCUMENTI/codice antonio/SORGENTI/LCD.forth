
\DICHIARAZIONE DEI GPIO DELLO SCHERMO LCD
: RS 11 ;
: RW 12 ;
: ENABLE_PIN 13 ;
: D4 16 ;
: D5 17 ;
: D6 18 ;
: D7 22 ;

\ PAROLA CHE ABILITA IL BUS A 4 BIT DEL DISPLAY LCD IN OUT
\ (VALORE -- )
: ABIL_BUS_PIN DUP D4 SWAP ABIL_PIN 
			   DUP D5 SWAP ABIL_PIN 
			   DUP D6 SWAP ABIL_PIN 
			   D7 SWAP ABIL_PIN ; 

\ PAROLE CHE MODIFICANO IL VALORE LOGICO DEI GPIO DEL DISPLAY LCD
\ UTILIZZATI PER MODIFICARE IL COMPORTAMENTO DEL DISPLAY
: ENABLE_PIN_H 1 ENABLE_PIN GPIOSET_LOG ;
: ENABLE_PIN_L 1 ENABLE_PIN GPIOCLR_LOG ;
: RS_H 1 RS GPIOSET_LOG ;
: RS_L 1 RS GPIOCLR_LOG ;
: RW_H 1 RW GPIOSET_LOG ;
: RW_L 1 RW GPIOCLR_LOG ;

RS OUT ABIL_PIN 
RW OUT ABIL_PIN
ENABLE_PIN OUT ABIL_PIN
OUT ABIL_BUS_PIN



\ FUNZIONE CHE INVIA I BIT AL BUS 4BIT
\ (ASCII_VALUE/ISTRUCTION_VALUE --)
: SET_BUS DUP 1 7 LSHIFT 1 D7 2SWAP AND 0 > IF GPIOSET_LOG ELSE GPIOCLR_LOG THEN 
		  DUP 1 6 LSHIFT 1 D6 2SWAP AND 0 > IF GPIOSET_LOG ELSE GPIOCLR_LOG THEN 
		  DUP 1 5 LSHIFT 1 D5 2SWAP AND 0 > IF GPIOSET_LOG ELSE GPIOCLR_LOG THEN 
		  1 4 LSHIFT 1 D4 2SWAP AND 0 > IF GPIOSET_LOG ELSE GPIOCLR_LOG THEN  ;

\ INVIO DI BIT AL BUS DEL DISPALY LCD 
\ (ASCII_VALUE/ISTRUCTION_VALUE --)	  
: SEND_BUS DUP SET_BUS 
		   ENABLE_PIN_H ENABLE_PIN_L
		   4 LSHIFT SET_BUS 		\ SHIFT DI 4 DEGLI 8 BIT DEL DATO DA INVIARE PERCHÃˆ UTILIZZIAMO IL BUS A 4BIT
		   ENABLE_PIN_H ENABLE_PIN_L 
		   4096 DELAY RS_L ;
		   
: SEND_DATA RS_H SEND_BUS ;

: SEND_ISTRUZIONI RS_L SEND_BUS ;

\ INIZIALIZZIAMO IL DISPLAY ABILITANDO LE DUE LINEE ED IL CURSORE
: LCDINIT 32 SEND_ISTRUZIONI  40 SEND_ISTRUZIONI 12 SEND_ISTRUZIONI ;

LCDINIT


VARIABLE CONTATORE \VARIABILE CHE OGNI VOLTA CHE VIENE INVOCATA VIENE INIZIALIZZATA A ZERO
VARIABLE DIM


\ PAROLA CHE INVIA I CODICI ASCII AL DISPLAY LCD
\ (INDIRIZZO_PRIMO_BYTE DIM -- )
: STAMPA_MESSAGGIO DUP 0 <> IF DIM ! 0 CONTATORE ! 
					BEGIN 
						DUP CONTATORE @ + C@ 
						DUP '.' = IF 
							DROP 192 SEND_ISTRUZIONI \IL PUNTO VIENE UTILIZZATO PER SPOSTARSI NELLA SECONDA RIGA
						ELSE 
							SEND_DATA 
						THEN
						1 CONTATORE ++I
						CONTATORE @ DIM @ = 
					UNTIL DROP
				   ELSE 
						2DROP 
				   THEN ;


: CLEAR_DISPLAY 01 SEND_ISTRUZIONI ;


