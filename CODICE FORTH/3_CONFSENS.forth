
DECIMAL

\NUMERO STANZE
2 CONSTANT NROOMS
VARIABLE COUNTER


\CREAZIONE VETTORI PERIFERICHE, L'INDICE INDICA LA STANZA (ES. GREENLEDS[0]= VALORE GPIO CORRISPONDENDE AL LED VERDE DELLA STANZA 0)
\ATTENZIONE CELLS E ALLOT NON FUNZIONANTI(?) RIDEFINITE IN 0_SE_ANS

CREATE GREENLEDS NROOMS 1 -  ALLOT ALIGN
CREATE REDLEDS NROOMS 1 - ALLOT ALIGN
CREATE BLULEDS NROOMS 1 - ALLOT ALIGN
CREATE THERMOS NROOMS 1 - ALLOT ALIGN
CREATE BUZZERS NROOMS 1 - ALLOT ALIGN
CREATE SERVOS NROOMS 1 - ALLOT ALIGN

\ INIZIALIZZAZIONE VARIABILE COUNTER CON VALORE NROOMS
\ ( -- )
: INITC NROOMS COUNTER ! ;

\PAROLE DI CONVENIENZA PER ACCEDERE  ALLE CELLE DEGLI ARRAY (ES_SCRITTURA: 170  GREENLEDS 1 ASTORE) (ES_LETTURA: GREENLEDS 1 AREAD)
\ ( N_CELLA -- ADDR_CELLA)
\: GREENLED CELLS GREENLEDS + ;
\: REDLED CELLS REDLEDS + ;
\: BLULED CELLS BLULEDS + ;
\ ( GPIO  ARRAY_SENS  N_CELLA -- )
: ASTORE + C! ;
\ ( ARRAY_SENS N_CELLA -- VALUE)
: AREAD + C@ ;

\INIZIALIZZAZIONE STANZA 0
17 REDLEDS 0 ASTORE 
18 GREENLEDS 0 ASTORE
27 BLULEDS 0 ASTORE
5 THERMOS 0 ASTORE
13 BUZZERS 0 ASTORE
12 SERVOS 0 ASTORE

\INIZIALIZZAZIONE STANZA 1 (UGUALE A STANZA 0 PER PROVA)
17 REDLEDS 1 ASTORE
18 GREENLEDS 1 ASTORE
27 BLULEDS 1 ASTORE
5 THERMOS 1 ASTORE
13 BUZZERS 1 ASTORE
12 SERVOS 1 ASTORE

\MODIFICA GPIOFSEL PER TUTTI I GPIO COLLEGATI AD UNA TIPOLOGIA DI SENSORI (PER TUTTE LE STANZE) 
\ ( VALORE_LOGICO ARRAY_SENS --  ) 

: ABILS INITC BEGIN COUNTER @ WHILE 2DUP COUNTER @ 1 - AREAD SWAP ABILPIN 1 COUNTER DECC COUNTER @ 0 = IF DROP DROP THEN REPEAT ;

\REDLEDS 0 AREAD 001 ABILPIN
\GREENLEDS 0 AREAD 001 ABILPIN
\BLULEDS 0 AREAD 001 ABILPIN

\ABILITA GPIO SENSORI LED IN USCITA
1 REDLEDS ABILS
1 GREENLEDS ABILS
1 BLULEDS ABILS

\ABILITA GPIO THERMOS IN INGRESSO
0 THERMOS ABILS

\ABILITA GPIO BUZZERS IN OUTPUT
1 BUZZERS ABILS

HEX
\SEZIONE GESTIONE PWM
OFFSETPI @ 001010A0 + CONSTANT CM_PWMCTL 
OFFSETPI @ 001010A4 + CONSTANT CM_PWMDIV 
5A000000 CONSTANT CM_PASSWD \ PASSWORD PER MODIFICA 
1 4 LSHIFT CONSTANT CM_PWMCTL_ENAB \ BIT DI ABILITAZIONE DEL CM_PWM CHE CORRISPONDE AL QUARTO


: VALUE_PWM_CTL2 100 ; \0000 0001 0000 0000 ABILITIAMO IL SECONDO CANALE DEL PWM
: VALUE_PWM_CTL1  1 ; \0000 0000 0000 0001 ABILITIAMO IL PRIMO CANALE DEL PWM
 
 0 PWMCTL ! \ TURN OFF PWM
 

DECIMAL  
 
CM_PASSWD 1 OR CM_PWMCTL @ OR CM_PWMCTL ! \ 19,2 MHz frequenza oscillatore RASP PI 3
CM_PASSWD DIVIDER @ 12 LSHIFT OR CM_PWMDIV ! \ frequenza di uscita = 19,2 MHz/192 = 100KHz
CM_PASSWD CM_PWMCTL_ENAB OR CM_PWMCTL @ OR CM_PWMCTL !


: RANGE 2000 ; \ PWM Range = (frequenza PWM=100KHz ) /(frequenza di output desiderata = 50Hz COME DA DOCUMENTAZIONE SERVO SG90) (1/0,02 SEC)


: PWMSET1 VALUE_PWM_CTL1 1 7 LSHIFT OR PWMCTL ! \IMPOSTIAMO IL CANALE 1 IN M/S     0000 0000 1000 0001
		RANGE PWMRNG1 ! ;

: PWMSET2 VALUE_PWM_CTL2 1 15 LSHIFT OR PWMCTL ! \IMPOSTIAMO IL CANALE 2 IN M/S    1000 0001 0000 0000
		RANGE PWMRNG2 ! ;



